" Anvesh G. Jhuboo
" VIMRC config file
" Use for both vim and neovim

syntax on                   " Enable syntax highlighting
filetype plugin indent on   " Enable file type based indentation

set autoindent              " Respect indentation when staring a new file
set expandtab               " Expand tabs to spaces. Essential in Python
set tabstop=4               " Number of spaces tab is counter for
set shiftwidth=4            " Number of spaces to use for autoindent
set nocompatible            " Vim defaults, and not Vi"
set shortmess+=I            " Prevent annoying startup functionality
set number                  " Show line numbers.
set relativenumber          " Set relative number for easier movement

colorscheme slate

set backspace=indent,eol,start  " Fixes non-intuitve backspace behavior

set laststatus=2            " Always show status line at the bottom

set hidden                  " Enable hidden buffers

set ignorecase              " Makes searching easier and more intuitive
set smartcase
set incsearch
set hlsearch

set belloff=all             " Disable the bell
set mouse+=a                " Enable mouse support

set wildmenu                    " Enable enchaned tab autocomplete
set wildmode=list:longest,full  " Complete till longest string then open wildmenu

" Build Good Habits ... Do this in normal mode...'
nnoremap <Left>  :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up>    :echoe "Use k"<CR>
nnoremap <Down>  :echoe "Use j"<CR>
" ...and in insert mode
inoremap <Left>  <ESC>:echoe "Use h"<CR>
inoremap <Right> <ESC>:echoe "Use l"<CR>
inoremap <Up>    <ESC>:echoe "Use k"<CR>
inoremap <Down>  <ESC>:echoe "Use j"<CR>

" Simple mapping
:map \p i(<Esc>ea)<Esc>
:map \c i{<Esc>ea}<Esc>

" Immediately add a closing quotes or braces in insert mode
inoremap ' ''<esc>i
inoremap " ""<esc>i
inoremap ( ()<esc>i
inoremap { {}<esc>i
inoremap [ []<esc>i

" Navigating Terminal Windows more easily by removing Ctrl-w
tnoremap <c-j> <c-w><c-j>
tnoremap <c-k> <c-w><c-k>
tnoremap <c-l> <c-w><c-l>
tnoremap <c-h> <c-w><c-h>

" ===============================
"           Leader
" ===============================

" Map the leader key to a spacebar
let mapleader = "\<space>"

set tags=tags;              " Look for a tags file recursively in parent dirs

" Regenerate tags when saving Python files
autocmd BufWritePost *.py silent! !ctags -R &
autocmd BufWritePost *.cpp *.h silent! !ctags -R &

" Plugin Functionality
noremap <leader>n :NERDTreeToggle<cr>
noremap <leader>p :CtrlP<cr>
noremap <leader>b :CtrlBuffer<cr>
noremap <leader>m :CtrlPMRU<cr>
noremap <leader>] :YcmCompleter GoTo<cr>
noremap <f5> :GundoToggle<cr>

" Set CtrlP working dir to a repo root (with fallback to current dir)
" Hence only use CtrlP when .git is present in parent dir
let g:ctrlp_working_path_mode = 'ra'


" ===============================
"        Plug-In Manager
" ===============================

" Manage plugins with vim-plug
call plug#begin()

Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
Plug 'tpope/vim-vinegar'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'mileszs/ack.vim'
Plug 'easymotion/vim-easymotion'
Plug 'junegunn/vim-plug'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-dispatch'
Plug 'christoomey/vim-tmux-navigator'

let g:plug_timeout = 300        " Increase vim-plug timeout for YouCompleteMe
Plug 'Valloric/YouCompleteMe', { 'do': './install.py' }

Plug 'sjl/gundo.vim'
Plug 'tpope/vim-surround'
Plug 'vim-airline/vim-airline'
Plug 'w0rp/ale'
Plug 'flazz/vim-colorschemes'

call plug#end()

" Install vim-plug if it's not already installed
" if empty(glob('~/.vim/autoload/plug.vim'))
"     silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
"                 \ https://raw.github.com/junegunn/vim-plug/master/plug.vim
"     autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
" endif


" ===============================
"           Neovim
" ===============================
" => Neovim
"
if !has('nvim')
    set nocompatible
    filetype plugin indent on
    syntax on
    set autoindent
    set autoread
    set backspace=indent,eol,start
    set belloff=all
    set cscopeverbose
    set complete-=i
    set encoding=utf-8
    set formatoptions=tcqj
    set fsync
    set history=10000
    set hlsearch
    set incsearch
    set langnoremap
    set laststatus=2
    set nrformats=bin,hex
    set ruler
    set sessionoptions-=options
    set shortmess=F
    set showcmd
    set sidescroll=1
    set smarttab
    set tabpagemax=50
    set ttyfast
    set viminfo+=!
    set wildmenu
endif
